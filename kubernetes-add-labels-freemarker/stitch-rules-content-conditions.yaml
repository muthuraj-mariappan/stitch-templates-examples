kind: Rules
metadata:
  namespace: k8s-freemarker
spec:
  - name: "k8s.AddLabelToService"
    condition:
      deployedType: k8s.Resources
      expression: "#input.getStringValue('$.kind') == 'Service'"
    processor:
      - type: patch
        description: "Adding label to Service document"
        phase: PATCH
        merge:
          type: overlay
        parameters:
          patch:
            - op: add
              path: "/metadata/labels/kindService"
              value: ""
  - name: "k8s.AddLabelToDeployment"
    condition:
      deployedType: k8s.Resources
      expression: "#input.getStringValue('$.kind') == 'Deployment'"
    processor:
      - type: patch
        description: "Adding label to Deployment document"
        phase: PATCH
        merge:
          type: overlay
        parameters:
          patch:
            - op: add
              path: "/metadata/labels/kindDeployment"
              value: ""
  - name: "k8s.ChangePortBasedOnContainerName"
    condition:
      deployedType: k8s.Resources
      expression: "#input.pathExistsWithValue(\"$.spec.template.spec.containers[?(@.name == 'springboot-petclinic')]\")"
      expression: "#input.getIntegerValue(\"$.spec.template.spec.containers[?(@.name == 'springboot-petclinic')].ports[0].containerPort\") == 8080"
    processor:
      - type: patch
        description: "Changing container port"
        phase: PATCH
        merge:
          type: overlay
        parameters:
          patch:
            - op: replace
              path: "/spec/template/spec/containers/0/ports/0/containerPort"
              value: 8081
  - name: "k8s.ChangePortForService"
    condition:
      deployedType: k8s.Resources
      expression: "#input.getStringValue('$.kind') == 'Service'"
      expression: "#input.getIntegerValue('$.spec.ports[0].port') == 8080"
      expression: "#input.getIntegerValue('$.spec.ports[0].targetPort') == 8080"
    processor:
      - type: patch
        description: "Changing port for service"
        phase: PATCH
        merge:
          type: overlay
        parameters:
          patch:
            - op: replace
              path: "/spec/ports/0/port"
              value: 8081
      - type: patch
        description: "Changing targetPort for service"
        phase: PATCH
        merge:
          type: overlay
        parameters:
          patch:
            - op: replace
              path: "/spec/ports/0/targetPort"
              value: 8081
  - name: "k8s.CombinedRule"
    condition:
      deployedType: k8s.Resources
      expression: "#ctx.getCurrentDeployedApplication() != null && #input.getStringList(\"$.spec.template.spec.containers[*].name\").contains(#ctx.getCurrentDeployedApplication().getEnvironment().getName())"
    processor:
      - type: patch
        description: "Add combinedRule label"
        phase: PATCH
        merge:
          type: overlay
        parameters:
          patch:
            - op: add
              path: "/metadata/labels/combinedRule"
              value: "CombineRuleTriggered"

